buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
        maven { url = "https://jitpack.io/"}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'com.alibaba.fastjson2:fastjson2:2.0.1'
//        classpath 'com.github.arnetheduck:j2c:0.5.0'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "1.0"
group= "com.code.sjaiaa"
archivesBaseName = "Example mixin"
String modid = "whitenight"
String mixinClassifier = "dep"

minecraft {

    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_20"
}

repositories {
    jcenter()
    maven { url 'https://repo.spongepowered.org/maven/' }
    flatDir {
        dirs 'deps'
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT')
    compile ('com.alibaba.fastjson2:fastjson2:2.0.1')
//    implementation 'com.github.arnetheduck:j2c:0.5.0'
}


mixin {
    add sourceSets.main, "mixins.${modid}.refmap.json"
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': "mixins.${modid}.json",
            'FMLCorePluginContainsFMLMod': true,
            "ForceLoadAsMod": true
    )
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin:0.7.11-SNAPSHOT'))
        include(dependency('com.alibaba.fastjson2:fastjson2:2.0.1'))
    }

    exclude 'module-info.class'
    exclude 'dummyThing'
    exclude 'LICENSE.txt'

    classifier = mixinClassifier
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}


task runClientFix {
    doLast {
        String fileName = "${archivesBaseName}-${version}-${mixinClassifier}.jar"
        ant.move file: "${buildDir}/libs/${fileName}", tofile: "${projectDir}/run/mods/${fileName}"
        ant.delete file: "${buildDir}/libs/${archivesBaseName}-${version}.jar"
    }
}

runClient {
    standardInput = System.in
}

build.dependsOn(shadowJar)
runClient.dependsOn(build)
runClient.dependsOn(runClientFix)

processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'
                expand 'version':project.version, 'mcversion':project.minecraft.version
            }

            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
task copyJars(type: Copy) {
    from configurations.runtime
    into 'lib' // 目标位置
}
